## --------------------------------------------------------
# Build 
# --------------------------------------------------------

FROM golang:1.18.3-alpine3.15 as build
ARG arch=x86_64

RUN set -eux; apk add --no-cache ca-certificates build-base;
RUN apk add git
# NOTE: add these to run with LEDGER_ENABLED=true
# RUN apk add linux-headers

RUN git clone https://github.com/bitsongofficial/go-bitsong /bitsong --branch cosmwasm_integration
WORKDIR /bitsong

# CosmWasm: see https://github.com/CosmWasm/wasmvm/releases
ADD https://github.com/CosmWasm/wasmvm/releases/download/v1.1.1/libwasmvm_muslc.aarch64.a /lib/libwasmvm_muslc.aarch64.a
ADD https://github.com/CosmWasm/wasmvm/releases/download/v1.1.1/libwasmvm_muslc.x86_64.a /lib/libwasmvm_muslc.x86_64.a
RUN sha256sum /lib/libwasmvm_muslc.aarch64.a | grep 9ecb037336bd56076573dc18c26631a9d2099a7f2b40dc04b6cae31ffb4c8f9a
RUN sha256sum /lib/libwasmvm_muslc.x86_64.a | grep 6e4de7ba9bad4ae9679c7f9ecf7e283dd0160e71567c6a7be6ae47c81ebe7f32

# Copy the library you want to the final location that will be found by the linker flag `-lwasmvm_muslc`
RUN cp /lib/libwasmvm_muslc.${arch}.a /lib/libwasmvm_muslc.a

RUN LEDGER_ENABLED=false BUILD_TAGS=muslc LINK_STATICALLY=true make build
RUN echo "Ensuring binary is statically linked ..." \
  && (file /bitsong/build/bitsongd | grep "statically linked")

# --------------------------------------------------------
# Runner
# --------------------------------------------------------

FROM debian:11

RUN apt update && apt install bash curl -y
COPY --from=build /bitsong/build/bitsongd /bin/bitsongd

RUN curl -sSLf "$(curl -sSLf https://api.github.com/repos/tomwright/dasel/releases/latest | grep browser_download_url | grep linux_amd64 | grep -v .gz | cut -d\" -f 4)" -L -o dasel && chmod +x dasel
RUN mv ./dasel /bin/dasel

RUN useradd --system -m -d /bitsong --uid 1000 bitsong
WORKDIR /bitsong

USER bitsong

EXPOSE 26656
EXPOSE 26657
EXPOSE 1317